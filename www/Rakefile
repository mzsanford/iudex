# -*- ruby -*-

require 'rubygems'
require 'bundler/setup'

task :default => [ :gen ]

directory 'svg'

FileList[ '_dot/*.dot' ].each do |dot|
  svg = dot.sub( /(\.dot)$/, '.svg' ).sub( /^(_dot)/, 'svg' )
  png = dot.sub( /(\.dot)$/, '.png' ).sub( /^(_dot)/, 'svg' )

  file svg => [ dot, 'svg' ] do
    sh "dot -Tsvg -o #{svg} #{dot}"
  end

  file png => [ dot, 'svg' ] do
    sh "dot -Tpng -o #{png} #{dot}"
  end

  task :dot => [ svg, png ]
end

task :clean do
  rm_rf %w[ svg _site ]
end

desc "Run Jekyll to generate files"
task :gen => [ :dot ] do
  require 'jekyll'
  ARGV.clear
  load Gem.bin_path( 'jekyll', 'jekyll' )
end

desc "Run auto-regenerating Jekyll server"
task :server => [ :dot ] do
  require 'jekyll'
  ARGV.replace( %w[ --auto --server ] )
  load Gem.bin_path( 'jekyll', 'jekyll' )
end

DEST = File.expand_path("~/public_html/iudex")

task :prep_dest do
  FileUtils.mkdir_p DEST
end

desc "Publish any changes to #{DEST}"
task :diff => [ :gen, :prep_dest ]  do
  sh "rsync -n -rc -i _site/ #{DEST}"
end

desc "Publish HTML docs to #{DEST}"
task :publish => [ :gen, :prep_dest ] do
  sh "rsync -rc -i _site/ #{DEST}"
end

PRE_PUBLISH_BRANCH = `git branch`.split(/\n/).grep(/^\*/)[0].split.last
namespace :gh_pages do
  task :check_dirty do
    unless system 'git', 'diff', '--quiet', 'HEAD'
      abort "Aborted: you have uncommitted changes"
    end
  end

  task :switch => [:check_dirty] do
    sh "git checkout -b gh-pages"
  end
  
  task :generate => [:switch, :gen] do
    sh "git add _site"
    sh "git commit -m 'Publish HTML docs to GitHub'"
  end
  
  task :push do
    sh "git push origin gh-pages"
    sh "git checkout #{PRE_PUBLISH_BRANCH}"
  end
end

namespace :publish do
  desc "Publish HTML docs to GitHub"
  task :github => ["gh_pages:generate", "gh_pages:push"]
end